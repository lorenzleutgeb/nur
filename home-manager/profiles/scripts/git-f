#! /usr/bin/env bash
set -euo pipefail

# Read the default remote from config, defaulting to "origin".
DEFAULT_REMOTE=$(git config --default origin --get clone.defaultRemoteName)

# Use first argument as remote name, fallback to default.
REMOTE=${1:-$DEFAULT_REMOTE}

git fetch $REMOTE

HEAD=$(git rev-parse HEAD)

# Format that allows us to easily grep for local branches that are behind,
# and have an upstream at $REMOTE.
FMT="%(upstream:trackshort)%(upstream:remotename)|%(refname:short)"

for BRANCH in $(git for-each-ref refs/heads --format="$FMT" | grep -Po "<$REMOTE\|\K(.+)")
do
	if [ "$(git rev-parse $BRANCH)" = "$HEAD" ]
	then
		set +e
        	git merge --no-autostash --ff-only $BRANCH@{u}
		set -e
	else
		echo $BRANCH
		git update-ref refs/heads/$BRANCH $BRANCH@{u}
        fi
done
