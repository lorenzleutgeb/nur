# NOTE: Shebang is automatically generated by surrounding
#       call to `pkgs.writeShellApplication`.
#       If you want to copy this script, consider using the following:
#
#     #! /usr/bin/env nix-shell
#     #! nix-shell -i bash -p bash curl dateutils sqlite jq

set -euo pipefail

ME="gettex"

function log() {
	echo "$ME: $1" >&2
}

# Get current offset from UTC (varies between CET and CEST).
OFFSET="$(date +%:::z)"
log "Using offset $OFFSET"

mkdir -pv {"${XDG_DATA_HOME}","${XDG_CONFIG_HOME}"}/"${ME}"

DB="$XDG_DATA_HOME/$ME/db"

if [ "$1" = "import" ]
then
# Import pre-existing CSV file.
sqlite3 -csv "${DB}" ".import $2 $ME"
exit

elif [ "$1" = "init" ]
then
# Initialize database.
sqlite3 "${DB}" "\
create table if not exists $ME (isin text, time text not null, currency text not null, price int not null); \
create unique index if not exists idx on $ME (isin, time);"
exit

elif [ "$1" = "query" ]
then
# Query for specific isin.
sqlite3 -json "${DB}" "select isin, max(time) as time, currency, price from $ME where isin = '$2' group by isin" | jq
exit

elif [ "$1" = "query-all" ]
then
# Query for specific isin.
sqlite3 -json "${DB}" "select isin, max(time) as time, currency, price from $ME group by isin" | jq
exit

elif [ "$1" != "fetch" ]
then
echo "Unknown subcommand '$1'."
exit 1
fi

BASE="$(date -d "${2:-now}" --iso-8601=seconds)"
DAY="$(date -d "${BASE}" --iso-8601)"

if datetest "${BASE}" --lt "${DAY}T08:15:00${OFFSET}"
then
  log "Requested time is before opening of the exchange."
  BASE="$(date -d "$(dateadd "${BASE}" -1d)" --iso-8601)T22:00${OFFSET}"
elif datetest "${BASE}" --gt "${DAY}T22:00:00${OFFSET}"
then
  log "Requested time is after closing of the exchange."
  BASE="$(date -d "${BASE}" --iso-8601)T22:00${OFFSET}"
else
  BASE="$(dround "$(dateadd "${BASE}" -15m)" /-15m)"
fi

log "Adjusting time to ${BASE}"

STAMP="$(date --utc -d "${BASE}" +%Y%m%d.%H.%M)"

FILENAME="posttrade.${STAMP}.mund"
LOCAL="${XDG_DATA_HOME}/${ME}/${FILENAME}"
BUFFER=$(mktemp "${ME}-XXX-${FILENAME}.csv")

if ! test -f "${LOCAL}"
then
  curl -L \
    "https://erdk.bayerische-boerse.de/?u=edd-MUNCD&p=public&path=/posttrade/${FILENAME}.csv.gz" \
    | gunzip \
    | grep --fixed-strings --file="${XDG_CONFIG_HOME}/${ME}/isin" \
    | tr -d "." \
    | sed "s#,#,$(date --utc -d "${BASE}" --iso-8601)T#" > "${BUFFER}"
  sqlite3 -csv "${DB}" ".import ${BUFFER} ${ME}"
  touch "${LOCAL}"
  rm "${BUFFER}"
fi
